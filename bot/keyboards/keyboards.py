from aiogram.types import (
    KeyboardButton,
    ReplyKeyboardMarkup,
    InlineKeyboardButton,
    InlineKeyboardMarkup,
)

class keyboard:
    async def basic() -> ReplyKeyboardMarkup:
        Button1 = KeyboardButton(text="‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞—Ö")
        Button2 = KeyboardButton(text="üèÜ –ú–æ–∏ –Ω–∞–≥—Ä–∞–¥—ã")
        Button3 = KeyboardButton(text="ü¶æ –£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ")
        Button4 = KeyboardButton(text="üë§ –ü—Ä–æ—Ñ–∏–ª—å")
        Button5 = KeyboardButton(text="‚ùì –ö–æ–º–º–∞–Ω–¥—ã")
        
        
        keyboard = ReplyKeyboardMarkup(resize_keyboard=True, keyboard=[[Button4],[Button2, Button3],[Button1, Button5]])
        return keyboard
    
    async def complete() -> InlineKeyboardMarkup:
        button1 = InlineKeyboardButton(text='‚úÖ –í—ã–ø–æ–ª–Ω–∏–ª', callback_data='COMPLETED')
        keyboard = InlineKeyboardMarkup(inline_keyboard=[[button1]])
        return keyboard
    
    async def again() -> InlineKeyboardMarkup:
        button1 = InlineKeyboardButton(text='‚úÖ –î–∞', callback_data='AGAIN')
        button2 = InlineKeyboardButton(text='‚ùå –ù–µ—Ç', callback_data='NOT_AGAIN')
        keyboard = InlineKeyboardMarkup(inline_keyboard=[[button1, button2]])
        return keyboard
    
    async def next() -> InlineKeyboardMarkup:
        button1 = InlineKeyboardButton(text='ü¶ø –°–ª–µ–¥—É—é—â–∞—è', callback_data=(f'NEXT'))
        button2 = InlineKeyboardButton(text='‚ùå –ó–∞–∫–æ–Ω—á–∏—Ç—å', callback_data=(f'STOP'))
        keyboard = InlineKeyboardMarkup(inline_keyboard=[[button1, button2]])
        return keyboard
    
    async def sex() -> InlineKeyboardMarkup:
        button1 = InlineKeyboardButton(text='üíô –ü–∞—Ä–µ–Ω—å', callback_data='Male')
        button2 = InlineKeyboardButton(text='üíñ –î–µ–≤—É—à–∫–∞', callback_data='Female')
        keyboard = InlineKeyboardMarkup(inline_keyboard=[[button1, button2]])
        return keyboard
    
    async def acc_decl(id: int, p_id:int, msg) -> InlineKeyboardMarkup:
        button1 = InlineKeyboardButton(text='‚úÖ –ü—Ä–∏–Ω—è—Ç—å', callback_data=(f'ACCEPTED {id} {p_id} {msg.message_id} PARTNER'))
        button2 = InlineKeyboardButton(text='‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å', callback_data=(f'DECLINE {id} {p_id} {msg.message_id} PARTNER'))
        keyboard = InlineKeyboardMarkup(inline_keyboard=[[button1, button2]])
        return keyboard
    
    async def pager(max_pages: int, curr_page: int) -> InlineKeyboardMarkup:
        buttons = []
        if curr_page > 1:
            buttons.append(InlineKeyboardButton(text=' ‚óÄÔ∏è ', callback_data=(f'PAGE- {curr_page}')))
            buttons.append(InlineKeyboardButton(text=' ‚Ü©Ô∏è ', callback_data=(f'PAGE_START')))
        
        if curr_page == 1:
            buttons.append(InlineKeyboardButton(text='  ', callback_data=(f'FEED')))
            buttons.append(InlineKeyboardButton(text='  ', callback_data=(f'FEED')))
        
        if curr_page < max_pages:
            buttons.append(InlineKeyboardButton(text=' ‚ñ∂Ô∏è ', callback_data=(f'PAGE+ {curr_page}')))
            
        if curr_page == max_pages:
            buttons.append(InlineKeyboardButton(text='  ', callback_data=(f'FEED')))
        
        return InlineKeyboardMarkup(inline_keyboard=[buttons])
        
        
    